// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using examen.Data;

#nullable disable

namespace examen.Migrations
{
    [DbContext(typeof(ExamenContext))]
    [Migration("20240125125240_EvenPart")]
    partial class EvenPart
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("examen.Models.EvenPart", b =>
                {
                    b.Property<Guid>("EvenimentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParticipantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EvenimentId", "ParticipantId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("EvenParts");
                });

            modelBuilder.Entity("examen.Models.Eveniment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime2");

                    b.Property<string>("descriere")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Evenimente");
                });

            modelBuilder.Entity("examen.Models.Participant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tip")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Participanti");
                });

            modelBuilder.Entity("examen.Models.EvenPart", b =>
                {
                    b.HasOne("examen.Models.Eveniment", "Eveniment")
                        .WithMany("EvenPart")
                        .HasForeignKey("EvenimentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("examen.Models.Participant", "Participant")
                        .WithMany("EvenPart")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eveniment");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("examen.Models.Eveniment", b =>
                {
                    b.Navigation("EvenPart");
                });

            modelBuilder.Entity("examen.Models.Participant", b =>
                {
                    b.Navigation("EvenPart");
                });
#pragma warning restore 612, 618
        }
    }
}
